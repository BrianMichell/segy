[tool.poetry]
name = "segy"
version = "0.1.0"
description = ""
authors = ["Altay Sansal <altay.sansal@tgs.com>"]
readme = "README.md"
packages = [
    { include = "segy", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.9, <3.13"
fsspec = ">=2024.2.0"
numpy = "^1.26.4"
pydantic = "^2.6.2"
pydantic-settings = "^2.1.0"
numba = "^0.59.0"
gcsfs = {version = ">=2024.2.0", optional = true}
s3fs = {version = ">=2024.2.0", optional = true}
adlfs = {version = ">=2024.2.0", optional = true}
pandas = {version = "^2.2.0", optional = true}

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"
pytest = "^8.0.2"
pytest-cov = "^4.1.0"

[tool.poetry.extras]
cloud = ["s3fs", "gcsfs", "adlfs"]
pandas = ["pandas"]

[tool.poetry.group.interactive]
optional = true

[tool.poetry.group.interactive.dependencies]
notebook = "^7.1.1"
matplotlib = "^3.8.3"

[tool.ruff]
target-version = "py39"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",   # pyflakes
    "B",  # bugbear
    "I",  # isort
    "UP",  # pyupgrade
    "N",  # pep8-naming
    "D",   # pydocstyle
    "ANN",  # annotations
    "S",  # bandit
    "A",  # builtins
    "C4",  # comprehensions
    "DTZ",  # datetimez
    "EM",  # errmsg
    "ICN",  # import-conventions
    "PIE",  # pie
    "PT",  # pytest-style
    "RSE",  # raise
    "RET",  # return
    "SIM",  # simplify
    "TID",  # tidy-imports
    "TCH",  # type-checking
    "ARG",  # unused-arguments
    "PTH",  # use-pathlib
    "TD",  # todos
    "PL",  # pylint
    "FLY", # flynt
    "NPY",  # numpy
]

ignore = [
    "ANN101",  # Missing type annotation for `self`
    "D107",  # Missing docstring in __init__ ; should be in class docstring
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pycodestyle]
max-line-length = 100
ignore-overlong-task-comments = true

[tool.pydoclint]
style = "google"
arg-type-hints-in-docstring = false
check-return-types = false
check-yield-types = false

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["segy", "tests"]

[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
